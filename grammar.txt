expr    	: KEYWORD:VAR IDENTIFIER EQUALS expr
			: comp-expr ((KEYWORD:&&|KEYWORD:||) comp-expr)*

comp-expr	: NOT comp-expr
			: arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

arith-expr	: term ((PLUS|MINUS) term)*

term    	: factor ((MUL|DIV) factor)*

factor  	: (PLUS|MINUS) factor
			: power

power 		: atom (POWER factor)*

atom 		: INT|FLOAT|IDENTIFIER 
			: LPAREN expr RPAREN
			: if-expr
			: for-expr
			: while-expr

if-expr		: KEYWORD:IF expr KEYWORD:THEN expr
			  (KEYWORD:ELIF expr KEYWORD:THEN expr)*
			  (KEYWORD:ELSE expr)?

for-expr	: KEYWORD:FOR IDENTIFIER EQ expr KEYWORD:TO expr 
			  (KEYWORD:STEP expr)? KEYWORD:THEN expr

while-expr	: KEYWORD:WHILE expr KEYWORD:THEN expr


5 + 5 == 2 + 8
O: (5 + 5) == (2 + 8) 
X: 5 + (5 == 2) + 8 

ALIAS is_equal = 5 == 5
O: ALIAS is_equal = (5 == 5)
X: (ALIAS is_equal = 5) == 5

5 == 5 && 6 == 6
O: (5 == 5) && (6 == 6)
X: 5 == (5 && 6) == 6
